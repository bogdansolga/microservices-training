server:
  port: 8081

spring:
  application:
    name: 'order-service'

  cloud:
    function:
      definition: createOrder;customerUpdated;orderCharged;orderNotCharged;orderCreatedProducer;chargeOrderProducer
    stream:
      bindings:
        createOrder-in-0:
          destination: create_order
        customerUpdated-in-0:
          destination: customer_updated
        orderCharged-in-0:
          destination: order_charged
        orderNotCharged-in-0:
          destination: order_not_charged
        orderProducer-out-0:
          destination: create_order
        orderCreatedProducer-out-0:
          destination: order_created
        chargeOrderProducer-out-0:
          destination: charge_order
      kafka:
        binder:
          auto-create-topics: true
          brokers: localhost:9092

  jackson:
    serialization:
      indent_output: true
    default-property-inclusion: non_null

  datasource:
    driver-class-name: org.h2.Driver

    #in memory URL - will be reinitialized on each application start
    #url: jdbc:h2:mem:orders;DB_CLOSE_ON_EXIT=FALSE

    #on disk URL - initialized on the first application start, reused afterward
    url: jdbc:h2:~/orders;DB_CLOSE_ON_EXIT=FALSE

    username: sa
    password: aVeryComplexPassword

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: false
        format_sql: true

    open-in-view: false

  sql:
    init:
      platform: h2
      mode: embedded

# logging settings
logging:
  level:
    root: info
    com: warn
    org:
      apache: warn
      hibernate: warn
      springframework: warn

  pattern:
    #console: '%clr([%thread] [%date{HH:mm:ss.SSS}]){faint} %clr(%2p) %clr(%-40.40logger{36}){cyan} %m%n%wex'
    console: '%clr([%date{HH:mm:ss.SSS}]){faint} %clr(%2p) %clr(%-40.40logger{36}){cyan} %m%n%wex'