server:
  port: 8085

spring:
  application:
    name: 'restaurant-service'

  cloud:
    function:
      definition: processOrder;deliverOrder;orderProcessed
    stream:
      bindings:
        processOrder-in-0: # handling a command - ProcessOrderCommand
          destination: process_order
        deliverOrder-out-0: # publishing a DeliverOrderCommand
          destination: deliver_order
        orderProcessed-out-0: # publishing an event - OrderProcessedEvent
          destination: order_processed
      kafka:
        binder:
          auto-create-topics: true
          brokers: localhost:9092

  datasource:
    command:
      url: jdbc:h2:mem:command
      username: sa
      password: something
    query:
      url: jdbc:h2:mem:query
      username: sa
      password: something_else

  jackson:
    serialization:
      indent_output: true
    default-property-inclusion: non_null

# logging settings
logging:
  level:
    root: info
    com: warn
    org:
      apache: warn
      hibernate: warn
      springframework: warn

  pattern:
    #console: '%clr([%thread] [%date{HH:mm:ss.SSS}]){faint} %clr(%2p) %clr(%-40.40logger{36}){cyan} %m%n%wex'
    console: '%clr([%date{HH:mm:ss.SSS}]){faint} %clr(%2p) %clr(%-40.40logger{36}){cyan} %m%n%wex'